package dreamwisp.visual.particles {	import flash.display.Sprite;	/**	 * ...	 * @author Brandon	 */	public class ParticleManager 	{		private var particleList:CircularParticleArray;		public var sprite:Sprite;				public function ParticleManager(capacity:uint) 		{			particleList = new CircularParticleArray(capacity);			sprite = new Sprite();		}				public function createParticle(x:int, y:int, velX:Number, velY:Number):void 		{			var particle:Particle;			if (particleList.numActive == particleList.capacity())			{				particle = particleList.getP(0);				particleList.setStart( particleList.getStart() + 1);			}			else 			{				particle = particleList.getP(particleList.numActive);				particleList.numActive++;			}						particle.x = x;			particle.y = y;			particle.velocityX = velX;			particle.velocityY = velY;						sprite.addChild(particle.sprite);		}				public function update():void 		{			var removalCount:uint = 0;			for (var i:uint = 0; i < particleList.numActive; i++) 			{				var p:Particle = particleList.getP(i);								// update particle code here				p.x += p.velocityX;				p.y += p.velocityY;				p.sprite.x = p.x;				p.sprite.y = p.y;				p.percentLife -= 0.1;								swap(particleList, i - removalCount, i);								if (p.percentLife <= 0)					removalCount++;			}			particleList.numActive -= removalCount;		}				private static function swap(list:CircularParticleArray, index1:uint, index2:uint):void 		{			const temp:Particle = list.getP(index1);			list.setP(index1, list.getP(index2));			list.setP(index2, temp);		}			}}